<?php
session_start(); //стартуем сессию
include "config.php";
include "functions.php";
include "templates/header.tpl";
	
	$mysqli = connectDB();
	$shipper = $_POST['shipper'];
	
	if(isset($_POST['parser_product_add']) && $_POST['parser_product_add'] == true){
		$productAction['add'] = true;
	}
	if(isset($_POST['parser_product_update']) && $_POST['parser_product_update'] == true){
		$productAction['update'] = true;
	}
	if(isset($_POST['parser_product_offupdate']) && $_POST['parser_product_offupdate'] == true){
		$productAction['offupdate'] = true;
	}
	
	if(isset($_POST['parser_product_notprice'])){ //что делать с товарами которые паропали с прайса
		if($_POST['parser_product_notprice'] == "statusoff"){
			$parser_product_notprice = "statusoff";
			// функция отключения товаров на сайте
		}
		if($_POST['parser_product_notprice'] == "delete"){
			$parser_product_notprice = "delete";
			// функция удаления товаров на сайте по ID (можно взять с clear.php)
		}
	}
	
	
	if(isset($_FILES) && $_FILES['inputfile']['error'] == 0){
		$filename = uploadFile($_FILES);
	}
	else {
		echo "Файл не выбран<br />"; 
	}
	
	$fileExtension = getExtension($filename);
	
	
	//$_POST['check off product ?'];
	
	
	
	switch($fileExtension){
		case 'xls';
		case 'xlsx';
			startProcessingEXEL($shipper,$filename);
		break;
		case 'xml';
			startProcessingXML($shipper,$filename);
		break;
		default;
			echo 'Формат не распознан';
		break;
	}
	repairProductQuantity($shipper);
	$mysqli->close();
	
  	function startProcessingEXEL($shipper,$filename){
		require_once "phpexel/Classes/PHPExcel.php";
		//loadfile
		global $uploaddir;
		global $rulesdir;
		global $startRow;
		require_once $rulesdir.$shipper.".php";
		echo "<div id='progressbar-sheet'></div><br /><div id='progressbar-row'></div>";
		
		$pr_all = 0;
		$pr_add = 0;
		$pr_upd = 0;
		
		$filePatch = $uploaddir.$filename;
		$Excel = PHPExcel_IOFactory::load($filePatch);
		if(!isset($sheetCount)){
			$sheetCount = $Excel->getSheetCount();
		}
		echo "<script>$( '#progressbar-sheet' ).progressbar({max: ".$sheetCount."});</script>";
		
		for ($s = 0; $s < $sheetCount; $s++){ // $sheetCount
			$Excel->setActiveSheetIndex($s);
			$highestRow = $Excel->getActiveSheet()->getHighestRow();
			echo "<script>$( '#progressbar-row' ).progressbar({max: ".$highestRow."});</script>";
			for ($i=$startRow; $i<=$highestRow; $i++){
				$productValues = getProductValues($i, $Excel);
				
				if($productValues==null): continue; endif;
				if ($productValues['category']== "skip" || $productValues['size']== "skip") : continue; endif;
				
				$productChecked = idCheck($productValues['id'],$shipper);
				switch($productChecked){
					case '0';
						if(isset($productAction['add']) && $productAction['add'] == true){
							productAdd($productValues, $shipper);
							$pr_add++;
						}
					break;
					case '1';
						if(isset($productAction['offupdate']) && $productAction['offupdate'] == true){
							// сюда можно добавить проверку включена ли опция проверять выключенные товары и если они снова появились то включать типо IF $post[check offline product] value = enable
							offProductCheckUpdate($productValues, $shipper);
							$pr_upd++;
						}
					break;
					case '2';
						if(isset($productAction['update']) && $productAction['update'] == true){
							productCheckUpdate($productValues, $shipper);
							$pr_upd++;
						}
					break;
					case '3';
						continue;
					break;
					default;
						echo 'Error result idCheck function';
					break;
				}
				echo "<script>$( '#progressbar-row' ).progressbar({value: ".$i."});</script>";
				$pr_all++;
			}
			echo "<script>$( '#progressbar-sheet' ).progressbar({value: ".$s."});</script>";
			
		}
		
		global $parser_product_notprice;
		if(isset($parser_product_notprice)){
			$countRemoteItems = checkPriceRemoteItemsEXEL($Excel, $shipper, $parser_product_notprice);
			echo "Было найдено $countRemoteItems елементов которых нет в прайсе";
		}
		
		echo "<div class='alert alert-warning alert-dismissible fade in' role='alert'>
				<button type='button' class='close' data-dismiss='alert' aria-label='Close'>
					<span aria-hidden='true'>&times;</span>
				</button>
				<strong>Всего обработано ".$pr_all." товар(ов)</strong><br />
				<strong>Добавлено новых ".$pr_add."</strong><br />
				<strong>Обновлено существующих".$pr_upd."</strong><br />
			  </div>";
	}
	
  	function startProcessingXML($shipper,$filename){
		//loadfile
		global $uploaddir;
		global $rulesdir;
		require_once $rulesdir.$shipper.".php";
		echo "<div id='progressbar-row'></div>";
		
		$pr_all = 0;
		$pr_add = 0;
		$pr_upd = 0;
		$pr_skip = 0;
		
		$filePatch = $uploaddir.$filename;
		$xmlfile = file_get_contents($filePatch);
		$XML = new SimpleXMLElement($xmlfile);
		if ($shipper == "12"){
			$highestRow = $XML->shop->offers->offer->count();
		}
		if ($shipper == "14"){
			$highestRow = $XML->items->item->count();
		}
		echo "<script>$( '#progressbar-row' ).progressbar({max: ".$highestRow."});</script>";
		
		for ($i=0; $i<=$highestRow; $i++){ //$highestRow
			$productValues = getProductValues($i, $XML);
			
			if ($productValues['category']== "skip" || $productValues['size']== "skip") : $pr_skip++; continue; endif;
			
			$productChecked = idCheck($productValues['id'],$shipper);
				switch($productChecked){
					case '0';
						if(isset($productAction['add']) && $productAction['add'] == true){
							productAdd($productValues, $shipper);
							$pr_add++;
						}
					break;
					case '1';
						if(isset($productAction['offupdate']) && $productAction['offupdate'] == true){
							// сюда можно добавить проверку включена ли опция проверять выключенные товары и если они снова появились то включать типо IF $post[check offline product] value = enable
							offProductCheckUpdate($productValues, $shipper);
							$pr_upd++;
						}
					break;
					case '2';
						if(isset($productAction['update']) && $productAction['update'] == true){
							productCheckUpdate($productValues, $shipper);
							$pr_upd++;
						}
					break;
					case '3';
						continue;
					break;
					default;
						echo 'Error result idCheck function';
					break;
				}
			echo "<script>$( '#progressbar-row' ).progressbar({value: ".$i."});</script>";
			//$calculation=(ceil($i/100))*100;
			//if($calculation != $progress){
			//	$progress = $calculation;
			//	echo "<script>$( '#progressbar-row' ).progressbar({value: ".$progress."});</script>";
			//}
			$pr_all++;
		}
					
		global $parser_product_notprice;
		if(isset($parser_product_notprice)){
			$countRemoteItems = checkPriceRemoteItemsXML($XML, $shipper, $parser_product_notprice);
			echo "Было найдено $countRemoteItems елементов которых нет в прайсе";
		}
		
		echo "<div class='alert alert-warning alert-dismissible fade in' role='alert'>
				<button type='button' class='close' data-dismiss='alert' aria-label='Close'>
					<span aria-hidden='true'>&times;</span>
				</button>
				<strong>Всего обработано ".$pr_all." товар(ов)</strong><br />
				<strong>Добавлено новых ".$pr_add."</strong><br />
				<strong>Обновлено существующих".$pr_upd."</strong><br />
				<strong>Пропущено".$pr_skip."</strong><br />
			  </div>";
	}

include "templates/footer.tpl";

?>